void ship_spotter_obsolete(ship ship_that_spots, ship ship_being_spotted, std::vector<bool> &spotted_ship_table)
{
    int distance_x_between_ships = std::abs(ship_that_spots.position_x - ship_being_spotted.position_x);
    int distance_y_between_ships = std::abs(ship_that_spots.position_y - ship_being_spotted.position_y);
    // TODO: implement a detection probability when the ship is outside the certain detection range, but inside the uncertain detection range
    if ((distance_x_between_ships <= ship_being_spotted.certain_detection_range) && (distance_y_between_ships <= ship_being_spotted.certain_detection_range))
    {
        spotted_ship_table.push_back(true);
        std::cout << ship_that_spots.ship_class 
        << " is spotting " << ship_being_spotted.ship_class 
        << ". " << ship_being_spotted.ship_class 
        << " position is:\n" 
        << ship_being_spotted.position_x << "x\n" 
        << ship_being_spotted.position_y << "y\n";
        if ((distance_x_between_ships <= ship_that_spots.certain_detection_range) && (distance_y_between_ships <= ship_that_spots.certain_detection_range))
        {
            std::cout << "Because of how close we are, we have definitely been spotted!\n";
        }
        else if ((distance_x_between_ships <= ship_that_spots.uncertain_detection_range) && (distance_y_between_ships <= ship_that_spots.uncertain_detection_range))
        {
            std::cout << "Because of how close we are, we may have been spotted!\n";
        }
    }
}